version: 2.1

orbs:
  python: circleci/python@0.3.2

jobs:
  build-and-test:
    executor: python/default
    environment:
      PYTHONPATH=./src
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - python/test
  test-on-k8s:
    executor: python/default
    environment:
      PYTHONPATH=./src
    steps:
      - setup_remote_docker
      - checkout
      - python/load-cache
      - python/install-deps
      - python/install-deps:
          dependency-file: testcases/requirements.txt
      - python/save-cache
      - run:
          name: Setup k8s
          command: |
            wget -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
            k3d cluster create circleci-k8s
      - run:
          name: Run kubectl
          command: |
            export KUBECONFIG=$(k3d kubeconfig write circleci-k8s)
            chmod a+r $KUBECONFIG
            docker create -v /.kube --name kubeconfig alpine:3.4 /bin/true
            # curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            # chmod +x kubectl
            #k8s_ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' k3d-circleci-k8s-serverlb)
            sed -i "s/0.0.0.0.*/0.0.0.0:6443/g" $KUBECONFIG
            ls -l $KUBECONFIG
            cat $KUBECONFIG
            docker cp $KUBECONFIG kubeconfig:/.kube/config
            shopt -s expand_aliases
            alias helm="docker run --rm -it --name helm --network container:k3d-circleci-k8s-serverlb --volumes-from kubeconfig -v $(pwd):/apps -v ~/.helm:/root/.helm alpine/helm:latest"
            alias kubectl="docker run --rm --name kubectl --network container:k3d-circleci-k8s-serverlb --volumes-from kubeconfig bitnami/kubectl:latest"
            alias
            helm repo add stable https://kubernetes-charts.storage.googleapis.com
            helm install grafana grafana
            kubectl get pods
workflows:
  main:
    jobs:
      - build-and-test
      - test-on-k8s
  #     - test-coverage
  #     - code-quality
  # publish:
  #   jobs:
  #     - publish-to-pypi